import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;


public class Dialog1 extends JFrame implements ActionListener, Runnable {
	JTextArea content=new JTextArea();
	JPanel southPanel=new JPanel();
	JPanel panel1=new JPanel();
	JTextField textfield=new JTextField(20);
	Socket socket;
	DataInputStream in=null;
	DataOutputStream out=null;
	JButton send_message=new JButton("发送对话");
	JButton send_file=new JButton("发送文件");
	Thread thread;
	Dialog1(){
		this.setBounds(400, 100, 460, 400);
		this.setTitle("Dialog1");
		this.add(new JScrollPane(content),BorderLayout.CENTER);
		southPanel.add(new JLabel("对话内容或文件名"));
		southPanel.add(textfield);
		
		panel1.add(send_message);
		panel1.add(send_file);
		
		send_message.addActionListener(this);
		send_file.addActionListener(this);
		
		this.add(panel1,BorderLayout.NORTH);
		this.add(southPanel,BorderLayout.SOUTH);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
		
		thread=new Thread(this);
		thread.start();
		
	}
	@Override
	public void run() {
		// TODO Auto-generated method stub
		DatagramPacket pack=null;
		DatagramSocket mail_data=null;
		byte data[]=new byte[8192];
		try{
		pack=new DatagramPacket(data,data.length);
		mail_data=new DatagramSocket(888);
		}
		catch (Exception e){}
		
		while (true){
			try {
				mail_data.receive(pack);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			String message=new String(pack.getData(),0,pack.getLength());
			content.append(message+"\n");
		}

	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		if (arg0.getSource()==send_message){
			byte buffer[]=textfield.getText().trim().getBytes();
			
			try{
			InetAddress address = InetAddress.getByName("127.0.0.1");
			DatagramPacket data_pack=new DatagramPacket(buffer,buffer.length,address,666);
			DatagramSocket mail_data=new DatagramSocket();
			mail_data.send(data_pack);
			}
			catch (Exception e){}
			
		}
		if (arg0.getSource()==send_file){
			File file=new File(textfield.getText());
			int t = 0;
			byte buffer[]=new byte[8192];
			try {
				FileInputStream in=new FileInputStream(file);
				try {
					t=in.read(buffer);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				try{
					InetAddress address = InetAddress.getByName("127.0.0.1");
					DatagramPacket data_pack=new DatagramPacket(buffer,t,address,666);
					DatagramSocket mail_data=new DatagramSocket();
					mail_data.send(data_pack);
					}
				catch (Exception e){}
				
				
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
new Dialog1();
	}

}
