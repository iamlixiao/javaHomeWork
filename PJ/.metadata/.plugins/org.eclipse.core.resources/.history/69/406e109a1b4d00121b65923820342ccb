import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 * 
 */

/**
 * @author lixiao
 * 
 */
public class ImageThumbView extends JPanel implements ActionListener, Runnable {
	ImageCollection current;
	JPanel panel;
	JScrollPane mainsp;
	ImagePanel outerlabel;
	HashMap<String, ThumbButton> entries;
	HashMap<String, Thread> ct;
	Box boxlayout;

	ImageThumbView(String l, ImagePanel lb) {
		current = new ImageCollection(l);
		current.init();
		outerlabel = lb;
		boxlayout = Box.createVerticalBox();

		entries = new HashMap<String, ThumbButton>();
		ct = new HashMap<String, Thread>();
		for (int i = 0; i < current.length(); i++) {
			String currenttext = current.listImages().elementAt(i);
			ThumbButton bt = new ThumbButton(currenttext, current.getPath()
					+ '/' + currenttext);
			bt.setPreferredSize(new Dimension(128, 128));
			entries.put(currenttext, bt);
			// Thread th=new Thread(bt);
			// ct.put(currenttext, th);
			bt.addActionListener(this);
			boxlayout.add(bt);
			// th.start();
		}
		Thread th = new Thread(this);
		th.start();
		setLayout(new BorderLayout());
		setPreferredSize(new Dimension(200, 900));
		boxlayout.setPreferredSize(new Dimension(100, 85 * current.length()));
		mainsp = new JScrollPane(boxlayout);
		add(mainsp);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		// outerlabel.setIcon(new
		// ImageIcon(((ThumbButton)e.getSource()).getPath()));
		try {
			outerlabel.show(ImageIO.read(new File(((ThumbButton) e.getSource())
					.getPath())));
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		Image img;
		for (int i = 0; i < current.length(); i++) {
			try {
				img = ImageIO.read(new File(current.getPath() + '/'
						+ current.listImages().elementAt(i)));
				img = img.getScaledInstance(-1, 72, Image.SCALE_FAST);
				entries.get(current.listImages().elementAt(i)).setIcon(
						new ImageIcon(img));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.gc();
		}
		return;
	}
}
