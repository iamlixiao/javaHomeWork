import java.io.File;
import java.util.HashMap;
import java.util.Vector;

/**
 * 
 */

/**
 * @author lixiao
 * 
 */

public class ImageCollection {
	File destine;
	String path;
	boolean inited;
	ImageCollection parent;
	HashMap<String, ImageCollection> subcollections;
	Vector<String> subcollnames;
	HashMap<String, File> images;
	Vector<String> imagenames;

	ImageCollection(String l) {
		destine = new File(l);
		path = l;
		inited = false;
		parent = null;
		subcollections = new HashMap<String, ImageCollection>();
		subcollnames = new Vector<String>();
		images = new HashMap<String, File>();
		imagenames = new Vector<String>();
	}

	ImageCollection(String l, ImageCollection p) {
		destine = new File(l);
		path = l;
		inited = false;
		parent = p;
		subcollections = new HashMap<String, ImageCollection>();
		subcollnames = new Vector<String>();
		images = new HashMap<String, File>();
		imagenames = new Vector<String>();
	}

	HashMap<String, File> getImages() {
		return images;
	}

	String[] listImages() {
		return (String[]) imagenames.toArray();
	}

	void init() {
		if(parent==null)parent=new ImageCollection(destine.getParent());
		if (destine.isDirectory()) {
			File[] contents = destine.listFiles();
			for (File i : contents) {
				String n = i.getName();
				if (i.isDirectory()) {
					subcollections.put(n,
							new ImageCollection(i.getPath(), this));
					subcollnames.add(n);
				} else if (n.indexOf(".jpg") != -1) {
					images.put(n, i);
					imagenames.add(n);
				}
			}
		}
		inited = true;
	}

	void uninit() {
		subcollections.clear();
		subcollnames.clear();
		images.clear();
		imagenames.clear();
		inited = false;
	}

	boolean isInited() {
		return inited;
	}
}
