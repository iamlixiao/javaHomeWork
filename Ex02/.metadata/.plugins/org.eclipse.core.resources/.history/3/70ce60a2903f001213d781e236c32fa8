import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

class MyDialog extends JDialog implements ActionListener {
	JTextField searchfor = new JTextField(10);
	JTextField replacewith = new JTextField(10);
	JButton doreplace = new JButton("替换");
	JButton doreplaceall = new JButton("全部替换");
	String s1, s2;
	JTextArea text;

	MyDialog(JFrame o, String m, boolean b, JTextArea f) {
		super(o, m, b);
		setLayout(new FlowLayout());
		this.setBounds(400, 300, 230, 130);
		this.add(new JLabel("查找:"));

		this.add(searchfor);
		this.add(new JLabel("替换为:"));
		this.add(replacewith);
		this.add(doreplace);
		this.add(doreplaceall);
		doreplace.addActionListener(this);
		doreplaceall.addActionListener(this);
		text = f;
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		s1 = searchfor.getText();
		s2 = replacewith.getText();
		String c;
		Object thesource = arg0.getSource();
		if (thesource == doreplace) {
			c = text.getText().replaceFirst(s1, s2);
			text.setText(c);
		} else if (thesource == doreplaceall) {
			c = text.getText().replaceAll(s1, s2);
			text.setText(c);
			searchfor.setText("");
			replacewith.setText("");
		}
	}
}

class MyNotepad extends JFrame implements ActionListener, KeyListener {
	JMenuBar menubar = new JMenuBar();
	JMenu filemenu = new JMenu("文件");
	JMenu editmenu = new JMenu("编辑");
	JMenuItem newfile = new JMenuItem("新建");
	JMenuItem openfile = new JMenuItem("打开");
	JMenuItem savefile = new JMenuItem("保存");
	JMenuItem doexit = new JMenuItem("退出");
	JMenuItem docut = new JMenuItem("剪切");
	JMenuItem docopy = new JMenuItem("复制");
	JMenuItem dopaste = new JMenuItem("粘贴");
	JMenuItem dodelete = new JMenuItem("删除");
	JMenuItem dofind = new JMenuItem("查找");
	JMenuItem doreplace = new JMenuItem("替换");
	JTextArea text = new JTextArea();

	void popfind() {
		JOptionPane option = new JOptionPane();
		option.setVisible(true);
		String s = JOptionPane.showInputDialog(this, "查找", "查找：",
				JOptionPane.QUESTION_MESSAGE);
		if (s != null) {

			int now = text.getCaretPosition();
			int p = text.getText().indexOf(s, now);
			if (p != -1) {
				text.setSelectionStart(p);
				text.setSelectionEnd(p + s.length());
			}

		}
	}

	public MyNotepad() {
		menubar.add(filemenu);
		menubar.add(editmenu);
		this.setJMenuBar(menubar);
		filemenu.add(newfile);
		filemenu.add(openfile);
		filemenu.add(savefile);
		filemenu.add(doexit);
		editmenu.add(docut);
		editmenu.add(docopy);
		editmenu.add(dopaste);
		editmenu.add(dodelete);
		editmenu.add(dofind);
		editmenu.add(doreplace);
		text.setVisible(true);
		text.setLineWrap(true);
		GridLayout grid = new GridLayout(1, 1);
		this.setLayout(grid);
		JScrollPane textpane = new JScrollPane(text);
		this.add(textpane);
		text.addKeyListener(this);
		newfile.addActionListener(this);
		openfile.addActionListener(this);
		savefile.addActionListener(this);
		doexit.addActionListener(this);
		docopy.addActionListener(this);
		dopaste.addActionListener(this);
		docut.addActionListener(this);
		dodelete.addActionListener(this);
		dofind.addActionListener(this);
		doreplace.addActionListener(this);
		this.setTitle("记事本");
		setBounds(200, 100, 800, 600);
		setVisible(true);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
	}

	@Override
	public void keyPressed(KeyEvent arg0) {
		if (arg0.getModifiers() == InputEvent.CTRL_MASK
				&& arg0.getKeyCode() == KeyEvent.VK_F)
			popfind();
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		Object thesource = arg0.getSource();
		if (thesource == doexit) {
			System.exit(0);
		}

		if (thesource == docopy) {
			text.copy();
		}

		if (thesource == docut) {
			text.cut();
		}
		if (thesource == dopaste) {
			text.paste();
		}
		if (thesource == dodelete) {
			int s = text.getSelectionStart(), t = text.getSelectionEnd();
			String str = text.getText().substring(0, s)
					+ text.getText().substring(t);
			text.setText(str);
			text.setCaretPosition(s);
		}
		if (thesource == dofind) {
			popfind();
		}

		if (thesource == doreplace) {
			MyDialog dialog = new MyDialog(this, "替换", false, text);
			dialog.setVisible(true);

		}
		if (thesource == openfile) {
			JFileChooser c = new JFileChooser();
			c.showOpenDialog(this);
		}
		if (thesource == savefile) {
			JFileChooser c = new JFileChooser();
			c.showSaveDialog(this);
		}
		if (thesource == newfile) {
			text.setText("");
		}
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		new MyNotepad();
	}

}
